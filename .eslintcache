[{"/Users/jameswinston/PatientIQProjects/primer-test/src/App.js":"1","/Users/jameswinston/PatientIQProjects/primer-test/src/reportWebVitals.js":"2","/Users/jameswinston/PatientIQProjects/primer-test/src/patientIQThemePlayGround.js":"3","/Users/jameswinston/PatientIQProjects/primer-test/src/primerExample.js":"4","/Users/jameswinston/PatientIQProjects/primer-test/src/index.js":"5","/Users/jameswinston/PatientIQProjects/primer-test/src/reakitExample.js":"6","/Users/jameswinston/PatientIQProjects/primer-test/src/reakitExampleXStyled.js":"7","/Users/jameswinston/PatientIQProjects/primer-test/src/pricelineExample.js":"8"},{"size":1021,"mtime":1612297291115,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611939645725,"results":"11","hashOfConfig":"10"},{"size":38,"mtime":1612219199488,"results":"12","hashOfConfig":"10"},{"size":850,"mtime":1612296404812,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1611939645724,"results":"14","hashOfConfig":"10"},{"size":1336,"mtime":1612296098536,"results":"15","hashOfConfig":"10"},{"size":1965,"mtime":1612294984718,"results":"16","hashOfConfig":"10"},{"size":924,"mtime":1612298691069,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ipkl2o",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jameswinston/PatientIQProjects/primer-test/src/App.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/reportWebVitals.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/patientIQThemePlayGround.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/primerExample.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/index.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/reakitExample.js",[],"/Users/jameswinston/PatientIQProjects/primer-test/src/reakitExampleXStyled.js",["35"],"import React from \"react\";\nimport { Button } from \"reakit/Button\";\nimport styled, {\n  defaultTheme,\n  ThemeProvider,\n  Preflight,\n  x\n} from \"@xstyled/styled-components\";\n\nconst theme = {\n  ...defaultTheme,\n  colors: {\n    black: \"#000e1a\",\n    white: \"#fff\",\n    blue: \"#007ce0\",\n    navy: \"#004175\",\n    green: \"#06BFA8\",\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n};\n\n//this example is like this on purpose. we'd clean this up.\n//HOW CAN WE DO VARIANTS IN THE THEME FILE?\n\n//So here we skip the xstyled x.notation and use a styled component\n//that is wrapped in the xstyled constraint to value translators....we could just write these at the end of the day.\n//we don't really end up using styled components any differently with this.\n\nconst StyledButton = styled(Button)`\n  color: white;\n  border-radius: md;\n  background-color: ${(props) => props.bg};\n  font-weight: semibold;\n  transition: default;\n  padding: ${(props) => props.p};\n  &:focus {\n    outline: none;\n    box-shadow: emerald-ring;\n  }\n`;\n\nconst StyledXButton = (props) => <x.button {...props} />\n\nconst ReakitExample = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      {/*<Preflight /> this messes with the ENTIRE PAGE */}\n      <h2>Reakit w/ Styled Components and XStyled</h2>\n      <p>Custom Built using a primitive compnent library</p>\n      <div style={{ border: \"2px solid red\", padding: \"2rem\" }}>\n        <p>\n          This button uses the Styled Compnents Escape hatch. But it doesn't\n          seem to work as expected. It doesn't find the right green.\n        </p>\n        <StyledButton bg=\"green\" color=\"white\" size=\"big\" p={1}>\n          Escape Hatch Button\n        </StyledButton>\n        <br />\n        <br />\n        <br />\n        <p>This button uses the X.notation</p>\n        <StyledXButton bg=\"green\" color=\"white\" size=\"big\" p={1}>\n          X. Notation Button\n        </StyledXButton>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default ReakitExample;\n","/Users/jameswinston/PatientIQProjects/primer-test/src/pricelineExample.js",[],{"ruleId":"36","severity":1,"message":"37","line":6,"column":3,"nodeType":"38","messageId":"39","endLine":6,"endColumn":12},"no-unused-vars","'Preflight' is defined but never used.","Identifier","unusedVar"]